services:
  broker-service:
    build:
      context: ./../broker-service
      dockerfile: ./../broker-service/Dockerfile
    restart: always
    ports:
      - "8080:80"
    deploy:
      mode: replicated
      replicas: 1

  logger-service:
    build:
      context: ./../logger-service
      dockerfile: ./../logger-service/Dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1

  authentication-service:
    build:
      context: ./../authentication-service
      dockerfile: ./../authentication-service/Dockerfile
    restart: always
    ports:
      - "8081:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres user=postgres password=password dbname=users sslmode=disable connect_timeout=5"

  mailer-service:
    build:
      context: ./../mail-service
      dockerfile: ./../mail-service/Dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_HOST: "mailhog"
      MAIL_PORT: "1025"
      MAIL_DOMAIN: "localhost"
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      MAIL_FROMNAME: "Amin"
      MAIL_FROMADDRESS: ""
      MAIL_ENCRYPTION: "none"
  listener-service:
    build:
      context: ./../listener-service
      dockerfile: ./../listener-service/Dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1

  postgres:
    image: postgres:14.2
    ports:
      - "5432:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./dbdata/postgres/:/var/lib/postgresql/data/

  mongo:
    image: mongo:5.0.3
    ports:
      - "27017:27017"
    restart: always
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./dbdata/mongo:/data/db

  mailhog:
    image: mailhog/mailhog
    ports:
      - "8025:8025"
      - "1025:1025"

  rabbitmq:
    image: "rabbitmq:4-management-alpine"
    ports:
      - "15672:15672"
      - "5672:5672"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./dbdata/rabbitmq:/var/lib/rabbitmq/
